@page "/reservations"
@using ReservationSystem;

<PageTitle>Reservation Management</PageTitle>

<h1>Reservation Management</h1>


<style>
    table,
    th,
    td {
        border: 1px solid black;
        border-collapse: collapse;
        column-width: 20em;
    }
</style>

<a href="/newReservation">Make a new Reservation</a>

<hr />
<h2>Reservation Information</h2>

<label for="sortBy">Sort By:</label>
<select @bind=sortBy>
    <option value=0>Guest</option>
    <option value=1>Site</option>
    <option value=2>Site Type</option>
    <option value=3>Arrival</option>
    <option value=4>Departure</option>
    <option value=5>Status</option>
</select>
<button @onclick=sort>Show Results</button>

<table>
    <thead>
        <tr>
            <td>Guest</td>
            <td>Site</td>
            <td>Site Type</td>
            <td>Arrival</td>
            <td>Departure</td>
            <td>Status</td>
            <td colspan="3">Reservation Options</td>
        </tr>
    </thead>
    @foreach (var reservation in sortedList)
    {
        <tr>
            <td>@reservation.Guest.LastName @reservation.Guest.FirstName</td>
            <td>@reservation.Site.SiteNumber</td>
            <td>@reservation.Site.SiteType</td>
            <td>@reservation.Arrival</td>
            <td>@reservation.Departure</td>
            <td>@reservation.Status</td>
            <td><button @onclick="() => checkIn(reservation)">Check In</button></td>
            <td><button @onclick="() => checkOut(reservation)">Check Out</button></td>
            <td><button @onclick="() => cancel(reservation)">Cancel Reservation</button></td>
        </tr>
    }
</table>
<button @onclick="clearGone">Clear Departed and Cancelled Reservations</button>


<footer>
    <a href="/">Home</a>
    <a href="/logout">Logout</a>
</footer>

@code
{
    public int sortBy;
    public List<Reservation> sortedList = new();
    public void sort()
    {
        switch (sortBy)
        {
            case 0:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Guest.LastName).ToList();
                break;
            case 1:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Site.SiteNumber).ToList();
                break;
            case 2:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Site.SiteType).ToList();
                break;
            case 3:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Arrival).ToList();
                break;
            case 4:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Departure).ToList();
                break;
            case 5:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Status).ToList();
                break;
            default:
                sortedList = SystemRunner.ReservationList.OrderBy(s => s.Guest.LastName).ToList();
                break;
        }
    }

    public void checkIn(Reservation reservation)
    {
        SystemRunner.CheckInRes(reservation);

    }
    public void checkOut(Reservation reservation)
    {
        SystemRunner.CheckOutRes(reservation);
    }
    public void cancel(Reservation reservation)
    {
        SystemRunner.CancelRes(reservation);
    }

    public void clearGone()
    {
        SystemRunner.ClearDepartedRes();
        sort();
    }

    protected override async Task OnInitializedAsync()
    {
        sortBy = 0;
        sort();
    }
}